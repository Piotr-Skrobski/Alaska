services:
  rabbitmq:
    image: rabbitmq:4.0-management
    container_name: rabbitmq
    hostname: my-rabbit
    ports:
      - "5672:5672"  
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_logs:/var/log/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER:-admin}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD:-password}
    restart: unless-stopped
    networks:
      - alaska_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER:-mongouser}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD:-mongopassword}
      - MONGO_INITDB_DATABASE=${MONGO_DATABASE:-mydatabase}
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    command: [--auth, --wiredTigerCacheSizeGB, "1", --bind_ip_all]
    networks:
      - alaska_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: unless-stopped
    ports:
      - "27018:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_USER:-mongouser}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_PASSWORD:-mongopassword}
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGO_EXPRESS_USER:-admin}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_EXPRESS_PASSWORD:-password}
      - ME_CONFIG_SITE_SSL_ENABLED=false
      - ME_CONFIG_MONGODB_SSL=false
    depends_on:
      - mongodb
    networks:
      - alaska_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-pguser}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-pgpassword}
      - POSTGRES_DB=${POSTGRES_DB:-pgdatabase}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    command: postgres -c ssl=on -c ssl_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem -c ssl_key_file=/etc/ssl/private/ssl-cert-snakeoil.key
    networks:
      - alaska_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: unless-stopped
    ports:
      - "5433:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL:-admin@example.com}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD:-pgadminpassword}
      - PGADMIN_CONFIG_SERVER_MODE=True
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - alaska_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redispassword}
    restart: unless-stopped
    networks:
      - alaska_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  gateway:
    build:
      context: ./gateway-service
      dockerfile: Dockerfile
    container_name: gateway
    ports:
      - "${GATEWAY_PORT:-8080}:8080"
    networks:
      - alaska_network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  movie-service:
    build:
      context: ./movie-service
      dockerfile: Dockerfile
    container_name: movie-service
    ports:
      - "${MOVIE_SERVICE_PORT:-10002}:10002"
    environment:
      - MONGO_URI=${MONGO_URI:-mongodb://mongouser:mongopassword@mongodb:27017/mydatabase?authSource=admin}
      - RABBITMQ_URI=${RABBITMQ_URI:-amqp://admin:password@rabbitmq:5672/}
      - OMDB_API_KEY=${OMDB_API_KEY:-KEY_GOES_HERE}
    depends_on:
      - mongodb
      - rabbitmq
    networks:
      - alaska_network
    restart: unless-stopped

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "${USER_SERVICE_PORT:-10003}:10002"
    environment:
      - POSTGRES_URI=${POSTGRES_URL:-postgresql://pguser:pgpassword@postgres:5432/pgdatabase}
      - RABBITMQ_URI=${RABBITMQ_URI:-amqp://admin:password@rabbitmq:5672/}
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_URI=${REDIS_URI:-redis://:redispassword@redis:6379/0}
      - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID:-DISCORD_ID_HERE}
      - DISCORD_CLIENT_SECRET=${DISCORD_CLIENT_SECRET:-SECRET_HERE}
    depends_on:
      - postgres
      - rabbitmq
      - redis
    networks:
      - alaska_network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "8080:80"
    depends_on:
      - movie-service
      - user-service
    networks:
      - alaska_network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  alaska_network:
    driver: bridge

volumes:
  rabbitmq_data:
  rabbitmq_logs:
  mongodb_data:
  postgres_data:
  pgadmin_data:
  redis_data:
